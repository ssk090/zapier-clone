// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  zaps     Zap[]
}

model Zap {
  id        String   @id @default(uuid())
  triggerId String
  trigger   Trigger? // Each Zap is associated with a Trigger (one to one relationship)
  actions   Action[] // Each Zap is associated with Actions (one to many relationship)
  zapRuns   ZapRun[] // Each Zap is associated with a ZapRun (one to many relationship)
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Trigger {
  id        String           @id @default(uuid())
  zapId     String           @unique
  triggerId String
  type      AvailableTrigger @relation(fields: [triggerId], references: [id]) // Each Trigger is associated with AvailableTrigger (one to many relationship)
  zap       Zap              @relation(fields: [zapId], references: [id])
}

model Action {
  id           String          @id @default(uuid())
  zapId        String
  zap          Zap             @relation(fields: [zapId], references: [id])
  actionId     String
  type         AvailableAction @relation(fields: [actionId], references: [id])
  sortingOrder Int             @default(0)
}

model AvailableAction {
  id      String   @id @default(uuid())
  name    String
  actions Action[] // One-to-many relationship with Action
}

model AvailableTrigger {
  id       String    @id @default(uuid())
  name     String
  triggers Trigger[] // One-to-many relationship with Trigger
}

model ZapRun {
  id           String        @id @default(uuid())
  zapId        String
  metadata     Json
  zap          Zap           @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunOutbox? // One-to-one relationship with ZapRunOutbox
}

model ZapRunOutbox {
  id       String @id @default(uuid())
  zapRunId String @unique
  zapRun   ZapRun @relation(fields: [zapRunId], references: [id]) // One-to-one relationship with ZapRun
}
